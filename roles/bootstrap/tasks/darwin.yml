- name: Install Xcode Command Line Tools Catalina +
  block:
    - stat:
        path: /Library/Developer/CommandLineTools
      register: xcode

    - name: Install Xcode Command Line Tools w/ UI
      shell: xcode-select --install
      when: not xcode.stat.exists

  when: ansible_facts['distribution_version'] is version('10.15.0', '>=')

- name: touch installondemand file
  file:
    state: touch
    path: /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress

- name: Install Xcode CLI Tools
  shell: |
    PROD=$(softwareupdate -l | grep "\*.*Command Line" | head -n 1 | awk -F"*" '{print $2}' | sed -e 's/^ *//' | tr -d '\n')
    softwareupdate -i "$PROD"

- name: remove installondemand file
  file:
    state: absent
    path: /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress

- name: alias xcrun git to git in zshrc
  copy:
    dest: "/Users/{{ ansible_user_id }}/.profile"
    content: alias git='xcrun git'

- name: curl homebrew
  block:
    - stat:
        path: /opt/homebrew
      register: homebrew

    - name: make /opt/homebrew directory
      ansible.builtin.file:
        path: /opt/homebrew
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        mode: '0755'
        state: directory
      when: not homebrew.stat.exists
      become: yes

    - name: curl homebrew
      ansible.builtin.shell:
        chdir: /usr/local/src
        cmd: curl -L https://github.com/Homebrew/brew/tarball/master | tar xz --strip 1 -C /opt/homebrew
      when: not homebrew.stat.exists

- name: update homebrew
  homebrew:
    update_homebrew: yes

- name: install coreutils
  homebrew:
    name: coreutils
    state: latest

- name: install jq
  homebrew:
    name: jq
    state: latest

- name: update PATH
  lineinfile:
    dest: "~/.profile"
    insertafter: EOF
    line: 'export PATH=$PATH:/Users/{{ ansible_user_id }}/Library/Python/{{ ansible_facts["python"]["version"]["major"] }}.{{ ansible_facts["python"]["version"]["minor"] }}/bin:/opt/homebrew/bin'
    state: present
